Learning Objective: To gain a fuller understanding of critical sections in the Linux kernel by programming them.

Development: Use gcc and the C programming language, on the version of Linux we have in our VM.

Assignment: Re-implement your module from the device driver assignment as two separate kernel modules - one for an input device, and one for an output device, using shared memory between the two modules to manage the communication.

Don’t overthink the shared memory in the kernel – do a bit of Googling about sharing memory between kernel modules, and you’ll find that it’s as simple as an extern declaration in the right place.

What you will need to put some work into is properly guarding the critical sections.  Investigate the functionality in linux/mutex.h. 